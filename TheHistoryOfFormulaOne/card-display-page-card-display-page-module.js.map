{"version":3,"sources":["webpack:///./src/app/modules/data-fetching/services/season-standings-fetching-service/season-standings-fetching.service.ts","webpack:///./src/app/modules/pages/card-display-page/card-display-page-routing.module.ts","webpack:///./src/app/modules/pages/card-display-page/card-display-page.module.ts"],"names":[],"mappings":"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","file":"card-display-page-card-display-page-module.js","sourcesContent":["import { CardGenericData } from './../../../../models/CardGenericData';\r\nimport { SeasonStandingsResponseDTO } from './../../../../models/dtos/SeasonStandingsResponseDTO';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataFetchingService } from '../data-fetching-base-service/data-fetching.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CardDisplayPageGenericData } from 'src/app/models/CardDisplayPageGenericData';\r\n\r\n@Injectable()\r\nexport class SeasonStandingsFetchingService extends DataFetchingService<CardGenericData> {\r\n\r\n  constructor(private http: HttpClient) { super(); }\r\n\r\n  getData(year: number, limit: number, offset: number): Observable<SeasonStandingsResponseDTO> {\r\n    return this.http.get<SeasonStandingsResponseDTO>(`https://ergast.com/api/f1/${year.toString()}/driverStandings.json?limit=${limit}&offset=${offset}`);\r\n  }\r\n\r\n  getTransformedData(parameter: any, limit: number, offset: number): Observable<CardDisplayPageGenericData> {\r\n    return this.getData(parameter, limit, offset).pipe(map(\r\n      data => this.mapToCardGenericData(data)\r\n    ))\r\n  }\r\n\r\n  mapToCardGenericData(standingsResponse: SeasonStandingsResponseDTO): CardDisplayPageGenericData {\r\n    const cardGenericData: CardGenericData[] = [];\r\n    const titleAbove = standingsResponse.MRData.StandingsTable.season;\r\n    const totalData: number = +standingsResponse.MRData.total;\r\n\r\n    standingsResponse.MRData.StandingsTable.StandingsLists[0].DriverStandings.forEach(\r\n      driver => {\r\n\r\n        cardGenericData.push({\r\n          label: '#' + driver.position + ' ' + driver.Driver.givenName + ' ' + driver.Driver.familyName,\r\n          description: 'Points: ' + driver.points,\r\n          moreInfoLink: '/drivers/' + driver.Driver.driverId\r\n        })\r\n      }\r\n    )\r\n\r\n    return { cards: cardGenericData, title: 'Season Standings', aboveTitle: titleAbove, totalData }\r\n  }\r\n\r\n}\r\n","import { SeasonStandingsFetchingService } from './../../data-fetching/services/season-standings-fetching-service/season-standings-fetching.service';\r\nimport { CardDisplayPageComponent } from './../../ui/components/card-display-page/card-display-page.component';\r\nimport { NgModule, InjectionToken } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst SEASONS_SERVICE_TOKEN = new InjectionToken<string>(\"SeasonsStandingsService\");\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CardDisplayPageComponent\r\n  },\r\n  {\r\n    path: 'season-standings/:id',\r\n    data: {\r\n      requiredServiceToken: SEASONS_SERVICE_TOKEN\r\n    },\r\n    loadChildren: '../card-display-page/card-display-page.module#CardDisplayPageModule'\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: SEASONS_SERVICE_TOKEN,\r\n      useClass: SeasonStandingsFetchingService\r\n    }\r\n  ]\r\n})\r\nexport class CardDisplayPageRoutingModule { }\r\n","import { UiModule } from './../../ui/ui.module';\r\nimport { CardDisplayPageRoutingModule } from './card-display-page-routing.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    CardDisplayPageRoutingModule,\r\n    UiModule\r\n  ]\r\n})\r\nexport class CardDisplayPageModule { }\r\n"],"sourceRoot":""}